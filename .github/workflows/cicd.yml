name: 'CI_CD'

on:
  pull_request:
    branches: [ main ]

jobs:
  cicd:
    runs-on: [ ubuntu-latest ]
    steps:
      - name:  나의 깃헙 코드를 깃헙 액션의 VM에 옮기는 작업 중 ...
        uses: actions/checkout@v4

      - name: 깃헙 액션의 VM에 자바 설치중 ...
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: env 파일 생성
        run: |
          echo "${{ secrets.SECRET_ENV }}" > .env
        shell: bash

      - name: VM내의 도커를 통한 MySQL 구동 시키기
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: ${{secrets.SECRET_DB_NAME}}
          mysql root password: ${{secrets.SECRET_DB_PASSWORD}}

      - name: 빌드 및 테스트 코드 돌리는중 ...
        run: |
          chmod +x ./gradlew
          ./gradlew build

      - name: 도커로 빌드시키고 hub에 올리기
        run: |
          docker login -u ${{secrets.SECRET_DOCKER_ID}} -p ${{secrets.SECRET_DOCKER_TOKEN}}
          docker build -t ${{secrets.SECRET_DOCKER_ID}}/${{secrets.SECRET_DOCKER_REPO}} .
          docker push ${{secrets.DOCKER_HUB_ID}}/${{secrets.SECRET_DOCKER_REPO}}

      - name: ec2에 docker-compose.yml 파일 복사시키기
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{secrets.SECRET_AWS_HOST}}
          key: ${{secrets.SECRET_AWS_KEY}}
          username: ubuntu
          source: ${{secrets.SECRET_DOCKER_COMPOSE_YML}}
          target: ~/docker-compose.yml

      - name: executing remote ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.SECRET_AWS_HOST}}
          key: ${{secrets.SECRET_AWS_KEY}}
          username: ubuntu
          script: |
            sudo systemctl restart docker
            docker login -u ${{secrets.SECRET_DOCKER_ID}} -p ${{secrets.SECRET_DOCKER_TOKEN}}
            sudo docker pull ${{secrets.SECRET_DOCKER_ID}}/${{secrets.SECRET_DOCKER_REPO}}
            cd ~/docker-compose.yml
            sudo docker-compose down
            sudo docker-compose up -d
            sudo docker image prune -f

      - name: 오류명 상세히 알려줌
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/test-results/test